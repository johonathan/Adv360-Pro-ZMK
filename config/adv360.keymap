
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1     &kp N2    &kp N3    &kp N4  &kp N5               &mo 4                                                               &mo 4  &kp N6    &kp N7     &kp N8     &kp N9     &kp N0  &kp MINUS
   &kp TAB      &kp Q      &kp W     &kp E     &kp R   &kp T               &none                                                               &none   &kp Y     &kp U      &kp I      &kp O      &kp P   &kp BSLH
 &lt 2 ESC      &kp A      &kp S     &kp D     &kp F   &kp G               &none    &mo 3    &tog 1                      &mo 4      &mo 3      &none   &kp H     &kp J      &kp K      &kp L   &kp SEMI  &lt 2 SQT
 &kp LSHFT      &kp Z      &kp X     &kp C     &kp V   &kp B                               &kp HOME                  &kp PG_UP                         &kp N     &kp M  &kp COMMA    &kp DOT   &kp FSLH  &kp RSHFT
 &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LALT  &kp LGUI                    &kp BSPC  &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE          &kp RGUI   &kp RALT  &kp RCTRL  &kp RCTRL  &kp RCTRL
            >;
        };

        layer_swedish {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans     &trans       &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans     &trans    &kp RA(W)
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp RA(O)  &lt 2 RA(A)
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans     &trans       &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans     &trans       &trans
            >;
        };

        layer_symbols {
            bindings = <
 &trans       &kp F1      &kp F2                &kp F3                 &kp F4     &kp F5            &trans                                                  &trans           &kp F6        &kp F7        &kp F8        &kp F9        &kp F10  &kp F11
 &trans     &kp HASH   &kp EQUAL        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp PIPE            &trans                                                  &trans  &kp EXCLAMATION  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9       &kp STAR  &kp F12
 &trans  &kp AT_SIGN  &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE            &trans  &trans  &trans                  &trans  &trans  &trans     &kp QUESTION  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6       &kp PLUS   &trans
 &trans  &kp PERCENT   &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE                            &trans                  &trans                    &kp AMPERSAND  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH   &trans
 &trans       &trans      &trans                &trans                 &trans                       &trans  &trans  &trans                  &trans  &trans  &trans                   &kp NUMBER_0       &kp DOT     &kp COMMA         &trans   &trans
            >;
        };

        layer_nav {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans              &trans  &trans     &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                            &trans                                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
      &none         &none         &none         &none         &none         &none                       &bootloader                                                                                         &bootloader         &none  &kp C_VOL_DN        &kp K_MUTE  &kp C_VOL_UP         &none       &none
      &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &kp CAPSLOCK  &kp SCROLLLOCK                  &kp SCROLLLOCK  &kp CAPSLOCK  &rgb_ug RGB_MEFS_CMD 5         &none    &kp C_PREV  &kp C_PLAY_PAUSE    &kp C_NEXT         &none       &none
      &none         &none         &none         &none         &none         &none                                                      &bl BL_INC                      &bl BL_INC                                               &none         &none             &none         &none         &none       &none
      &none         &none         &none         &none         &none                                 &rgb_ug RGB_TOG    &bl BL_TOG      &bl BL_DEC                      &bl BL_DEC    &bl BL_TOG         &rgb_ug RGB_TOG                       &none             &none         &none         &none       &none
            >;
        };

    };
};
